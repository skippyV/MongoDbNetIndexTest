@page "/RadzenDataListExample"
@rendermode InteractiveServer

@using Radzen
@using Radzen.Blazor

<h3>Radzen DataList Example</h3>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" class="rz-p-2">
    <RadzenCheckBox @bind-Value="@allowVirtualization" Name="allowVirtualization"  />
    <RadzenLabel Text="Allow virtualization" Component="allowVirtualization" />
</RadzenStack>

<RadzenDataList AllowVirtualization=@allowVirtualization Style="@(allowVirtualization ? "height:400px;overflow:auto;" : "")" 
                WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"  LoadData=@LoadDummyData
                Data="@products" Count=@count TItem="Product" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
    <Template Context="product">
        <RadzenCard Variant="Variant.Outlined" class="rz-p-0" Style="width: 100%; overflow: hidden;">
            <RadzenRow Gap="0">
                <RadzenColumn Size="12" SizeLG="3" class="rz-p-4 product-title">
                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-on-secondary-lighter">@(product.ProductName)</RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeLG="7" class="rz-p-4">
                    <RadzenRow Gap="0">
                        <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-mb-0">In Stock</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body2">@(product.UnitsInStock)</RadzenText>
                        </RadzenColumn>


                        <RadzenColumn Size="12" SizeMD="6" SizeLG="3" class="rz-text-align-start rz-text-align-lg-end">
                            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Shade="Shade.Lighter" class="price-badge" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", product.UnitPrice)}") />
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeLG="2" class="rz-p-4">
                    <RadzenButton Text="Order now" Style="width: 100%" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </Template>
</RadzenDataList>

@* <style>
.product-title {
    min-height: 72px;
    background-color: var(--rz-secondary-lighter);
}
.price-badge {
    font-size: 16px;
    font-weight: bold;
    line-height: 20px;
    padding: 8px;
}
</style> *@

@code {
    bool allowVirtualization;
    int count;
    bool isLoading;

    IEnumerable<Product> products;

    protected override async Task OnInitializedAsync()
    {
        //products = LoadDummyData();
    }

    private void LoadDummyData()
    {
        // 10 Elements in each input array

        string[] productNames = { "apples", "bananas", "cereal", "dogtreats", "elfHats", "fish", "goatsmilk", "harryNads", "iguanas" };
        int[] unitsInStock = [11, 22, 33, 44, 55, 66, 77, 88, 99, 111];                     
        float[] unitPrices = { 0.79F, 1.36F, 24.45F, 3.2F, 44.8F, 5.01F, 66.21F, 7.94F, 88.8F, 93.19F };

        List<Product> productsList = new List<Product>();

        for (int i = 0; i < productNames.Count(); i++)
        {
            var rec = new Product() { ProductName = productNames[i], UnitsInStock = unitsInStock[i], UnitPrice = unitPrices[i] };
            productsList.Add(rec);
        }

        products = productsList.ToArray();
    }

    public class Product
    {
        public string ProductName { get; set; }
        public int UnitsInStock { get; set; }
        public float UnitPrice { get; set; }
    }

}